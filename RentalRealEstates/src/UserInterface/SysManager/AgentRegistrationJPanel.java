/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface.SysManager;

import Business.Builder.Builder;
import Business.Builder.BuilderDirectory;
import Business.RealEstateAgency.RealEstateAgent;
import Business.RealEstateAgency.RealEstateAgentDirectory;
import Business.DatabaseUtil.DB4OUtil;
import Business.EcoSystem;
import java.awt.CardLayout;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author rajesh
 */
public class AgentRegistrationJPanel extends javax.swing.JPanel {

    /**
     * Creates new form AgentRegistrationJPanel
     */
    EcoSystem system;
    JPanel rightSidePanel;
    ArrayList<String> agents = new ArrayList<String>();
    int agentCount = 0;
    int specializationCount = 0;

    public static final String PHONE_NO_REGEX = "[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]";
    public static final String PASSWORD_REGEX = "^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$";

    public AgentRegistrationJPanel(EcoSystem system, JPanel rightSidePanel) {
        initComponents();
        this.system = system;
        this.rightSidePanel = rightSidePanel;
        this.setSize(1160, 750);
        displayTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        agenttotalCount = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        agentTable = new javax.swing.JTable();
        jPanel7 = new javax.swing.JPanel();
        addbutton = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        rentalAgencyTextField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        nameTextField = new javax.swing.JTextField();
        expertiseTextField = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        userIdTextField = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        passwordTextField = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        phoneNumberTextField = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        splCount = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(250, 249, 251));
        setPreferredSize(new java.awt.Dimension(1160, 750));
        setLayout(new java.awt.CardLayout());

        jPanel1.setBackground(new java.awt.Color(255, 204, 153));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("SF Pro Display", 1, 24)); // NOI18N
        jLabel1.setText("Dashboard");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 40, -1, -1));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        agenttotalCount.setFont(new java.awt.Font("SF Pro Display", 1, 64)); // NOI18N
        agenttotalCount.setForeground(new java.awt.Color(51, 51, 255));
        agenttotalCount.setText("10");
        jPanel2.add(agenttotalCount, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 10, 60, 50));

        jLabel6.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        jLabel6.setText("Rental agencies");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, -1, -1));

        jLabel13.setFont(new java.awt.Font("SF Pro Text", 0, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(152, 151, 151));
        jLabel13.setText("Total number of rental agencies ");
        jPanel2.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, -1, -1));

        jLabel15.setFont(new java.awt.Font("SF Pro Text", 0, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(152, 151, 151));
        jPanel2.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 170, -1, -1));

        jLabel19.setFont(new java.awt.Font("SF Pro Text", 0, 14)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(152, 151, 151));
        jLabel19.setText("that are registered with us");
        jPanel2.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 140, -1, -1));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 110, 250, 180));

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        agentTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Rental Agency", "Specialization", "User ID", "Password", "Phone Number"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        agentTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                agentTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(agentTable);

        jPanel6.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 710, 410));

        jPanel1.add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 320, 710, 410));

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        addbutton.setBackground(new java.awt.Color(51, 51, 255));
        addbutton.setFont(new java.awt.Font("SF Pro Text", 0, 14)); // NOI18N
        addbutton.setForeground(new java.awt.Color(255, 255, 255));
        addbutton.setText("Add");
        addbutton.setBorder(null);
        addbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addbuttonActionPerformed(evt);
            }
        });
        jPanel7.add(addbutton, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 560, 80, 30));

        updateButton.setBackground(new java.awt.Color(51, 51, 255));
        updateButton.setFont(new java.awt.Font("SF Pro Text", 0, 14)); // NOI18N
        updateButton.setForeground(new java.awt.Color(255, 255, 255));
        updateButton.setText("Update");
        updateButton.setBorder(null);
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });
        jPanel7.add(updateButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 560, 80, 30));

        deleteButton.setBackground(new java.awt.Color(255, 55, 95));
        deleteButton.setFont(new java.awt.Font("SF Pro Text", 1, 14)); // NOI18N
        deleteButton.setForeground(new java.awt.Color(255, 255, 255));
        deleteButton.setText("Delete");
        deleteButton.setBorder(null);
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });
        jPanel7.add(deleteButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 560, 90, 30));

        jLabel2.setFont(new java.awt.Font("SF Pro Display", 1, 24)); // NOI18N
        jLabel2.setText("Enter Details");
        jPanel7.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 300, 50));

        jLabel7.setFont(new java.awt.Font("SF Pro Text", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(73, 84, 90));
        jLabel7.setText("Name");
        jPanel7.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 220, -1));

        rentalAgencyTextField.setFont(new java.awt.Font("SF Pro Text", 0, 14)); // NOI18N
        jPanel7.add(rentalAgencyTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, 300, 30));

        jLabel8.setFont(new java.awt.Font("SF Pro Text", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(73, 84, 90));
        jLabel8.setText("Rental Agency");
        jPanel7.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, 220, -1));

        nameTextField.setFont(new java.awt.Font("SF Pro Text", 0, 14)); // NOI18N
        jPanel7.add(nameTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 300, 30));

        expertiseTextField.setFont(new java.awt.Font("SF Pro Text", 0, 14)); // NOI18N
        jPanel7.add(expertiseTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 250, 300, 30));

        jLabel9.setFont(new java.awt.Font("SF Pro Text", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(73, 84, 90));
        jLabel9.setText("Specialization");
        jPanel7.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, 220, -1));

        userIdTextField.setFont(new java.awt.Font("SF Pro Text", 0, 14)); // NOI18N
        jPanel7.add(userIdTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 330, 300, 30));

        jLabel10.setFont(new java.awt.Font("SF Pro Text", 0, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(73, 84, 90));
        jLabel10.setText("User ID");
        jPanel7.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 300, 220, -1));

        jLabel11.setFont(new java.awt.Font("SF Pro Text", 0, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(73, 84, 90));
        jLabel11.setText("Password");
        jPanel7.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 380, 220, -1));

        passwordTextField.setFont(new java.awt.Font("SF Pro Text", 0, 14)); // NOI18N
        jPanel7.add(passwordTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 410, 300, 30));

        jLabel12.setFont(new java.awt.Font("SF Pro Text", 0, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(73, 84, 90));
        jLabel12.setText("Phone Number");
        jPanel7.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 460, 220, -1));

        phoneNumberTextField.setFont(new java.awt.Font("SF Pro Text", 0, 14)); // NOI18N
        jPanel7.add(phoneNumberTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 490, 300, 30));

        jPanel1.add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 100, 370, 620));

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        splCount.setFont(new java.awt.Font("SF Pro Display", 1, 64)); // NOI18N
        splCount.setForeground(new java.awt.Color(51, 51, 255));
        splCount.setText("10");
        jPanel8.add(splCount, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 10, 60, 50));

        jLabel4.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        jLabel4.setText("Builders");
        jPanel8.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 70, -1, -1));

        jLabel18.setFont(new java.awt.Font("SF Pro Text", 0, 14)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(152, 151, 151));
        jPanel8.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 170, -1, -1));

        jLabel17.setFont(new java.awt.Font("SF Pro Text", 0, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(152, 151, 151));
        jLabel17.setText("Total number of builders");
        jPanel8.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, 180, -1));

        jLabel14.setFont(new java.awt.Font("SF Pro Text", 0, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(152, 151, 151));
        jLabel14.setText("we have under belt");
        jPanel8.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 140, 130, -1));

        jPanel1.add(jPanel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 110, 240, 180));

        add(jPanel1, "card2");
    }// </editor-fold>//GEN-END:initComponents

    private void addbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addbuttonActionPerformed
        // TODO add your handling code here:
        if (isValidated()) {

            String name = (nameTextField.getText());
            String rentalAgency = (rentalAgencyTextField.getText());
            String specialization = (expertiseTextField.getText());
            String userId = (userIdTextField.getText());
            String pwd = (passwordTextField.getText());
            String phoneNum = (phoneNumberTextField.getText());
            Long phoneNumber = Long.valueOf(phoneNum);

            if (!system.getUserAccDirectory().checkIfUsernameIsUnique(userId)) {
                JOptionPane.showMessageDialog(null, "User name already exists");
                return;
            }

            RealEstateAgent agent = new RealEstateAgent(userId, pwd, name, specialization, phoneNumber, rentalAgency);
            system.getUserAccDirectory().addAccount(agent);
            system.getRealEstateAgentDirectory().addNewRealEstateAgent(agent);

            displayTable();

            clearFields();
        }

    }//GEN-LAST:event_addbuttonActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        // TODO add your handling code here:

        DefaultTableModel table = (DefaultTableModel) agentTable.getModel();
        int sRow = agentTable.getSelectedRow();
        if (sRow >= 0) {

            String value = (String) table.getValueAt(sRow, 3);

            if (!userIdTextField.getText().matches(value)) {
                JOptionPane.showMessageDialog(this, "Cannot Update User ID, it is unique!!");
                clearFields();
                return;
            }
            if (isValidated()) {

                RealEstateAgent selectedAgent = (RealEstateAgent) table.getValueAt(sRow, 0);

                selectedAgent.setAgentName(nameTextField.getText());
                selectedAgent.setRentalAgency(rentalAgencyTextField.getText());
                selectedAgent.setSpecialization(expertiseTextField.getText());
                selectedAgent.setUserId(userIdTextField.getText());
                selectedAgent.setAgentPassword(passwordTextField.getText());
                selectedAgent.setPhoneNo(Long.valueOf(phoneNumberTextField.getText()));

                displayTable();
                anotherLoad();

            }
        } else {
            JOptionPane.showMessageDialog(this, "Please select a row to update");
        }

    }//GEN-LAST:event_updateButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:

        DefaultTableModel table = (DefaultTableModel) agentTable.getModel();
        int sRow = agentTable.getSelectedRow();
        if (sRow >= 0) {

            String value = (String) table.getValueAt(sRow, 3);
            RealEstateAgentDirectory agentDirectory = system.getRealEstateAgentDirectory();

            RealEstateAgent selectedAgent = (RealEstateAgent) table.getValueAt(sRow, 0);
            agentDirectory.removeRealEstateAgent(selectedAgent);
            system.getUserAccDirectory().removeccount(selectedAgent);

            displayTable();

            anotherLoad();
            clearFields();
        } else {
            JOptionPane.showMessageDialog(this, "Please Select a Row!!");
        }

    }//GEN-LAST:event_deleteButtonActionPerformed

    private void anotherLoad() {
        populateDashBoard();
        
        AgentRegistrationJPanel dr = new AgentRegistrationJPanel(system, rightSidePanel);
        rightSidePanel.add(dr);
        
        CardLayout layout = (CardLayout) rightSidePanel.getLayout();
        layout.next(rightSidePanel);
    }

    private void agentTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_agentTableMouseClicked
        // TODO add your handling code here:

        DefaultTableModel table = (DefaultTableModel) agentTable.getModel();
        int selectedRow = agentTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a Person from table", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        } else {
            nameTextField.setText(table.getValueAt(selectedRow, 0).toString());
            rentalAgencyTextField.setText(table.getValueAt(selectedRow, 1).toString());
            expertiseTextField.setText(table.getValueAt(selectedRow, 2).toString());
            userIdTextField.setText(table.getValueAt(selectedRow, 3).toString());
            passwordTextField.setText(table.getValueAt(selectedRow, 4).toString());
            phoneNumberTextField.setText(table.getValueAt(selectedRow, 5).toString());
        }
    }//GEN-LAST:event_agentTableMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addbutton;
    private javax.swing.JTable agentTable;
    private javax.swing.JLabel agenttotalCount;
    private javax.swing.JButton deleteButton;
    private javax.swing.JTextField expertiseTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JTextField passwordTextField;
    private javax.swing.JTextField phoneNumberTextField;
    private javax.swing.JTextField rentalAgencyTextField;
    private javax.swing.JLabel splCount;
    private javax.swing.JButton updateButton;
    private javax.swing.JTextField userIdTextField;
    // End of variables declaration//GEN-END:variables

    private void displayTable() {
        //throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
        RealEstateAgentDirectory realEstateAgentDirectory = system.getRealEstateAgentDirectory();
        DefaultTableModel model = (DefaultTableModel) agentTable.getModel();

        model.setRowCount(0);
        for (RealEstateAgent agent : realEstateAgentDirectory.getRealEstateAgent()) {
            Object[] row = new Object[6];
            row[0] = agent;
            row[1] = agent.getRentalAgency();
            row[2] = agent.getSpecialization();
            row[3] = agent.getUserId();
            row[4] = agent.getAgentPassword();
            row[5] = agent.getPhoneNo();
            agents.add(agent.getRentalAgency());

            model.addRow(row);

        }
        populateDashBoard();
    }

    private void populateDashBoard() {
        
        BuilderDirectory directory = system.getBuilderDirectory();
        List<Builder> builderList = directory.getBuilders();
        int length = builderList.size();
        System.out.println(agents.size());
        HashSet<String> uniqueHospital = new HashSet<String>(agents);
        
        agentCount = uniqueHospital.size();
        specializationCount = length;

        agenttotalCount.setText(Integer.toString(agentCount));
        splCount.setText(Integer.toString(specializationCount));

    }

    private boolean isValidated() {
        if (null == nameTextField.getText() || nameTextField.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter name.");
            return false;
        }
        if (null == rentalAgencyTextField.getText() || rentalAgencyTextField.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "please enter Rental Agency");
            return false;
        }
        if (null == expertiseTextField.getText() || expertiseTextField.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "please enter expertise");
            return false;
        }
        if (null == userIdTextField.getText() || userIdTextField.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "please enter User ID");
            return false;
        }
        if (null == passwordTextField.getText() || passwordTextField.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "please enter password");
            return false;
        }
        if (null == phoneNumberTextField.getText() || phoneNumberTextField.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "please enter phone number");
            return false;
        }

        if (!phoneNumberTextField.getText().matches(PHONE_NO_REGEX)) {
            JOptionPane.showMessageDialog(this, " 10 digit phone number");
            phoneNumberTextField.setText("");
            return false;
        }
        if (!passwordTextField.getText().matches(PASSWORD_REGEX)) {
            JOptionPane.showMessageDialog(this, "Password is in incorrect Format.\nShould be minimum 8 in length "
                    + "with one upper case, one lower case, one digit and one special character");
            passwordTextField.setText("");
            return false;
        }
        return true;
    }

    private void clearFields() {
        rentalAgencyTextField.setText("");
        nameTextField.setText("");
        expertiseTextField.setText("");
        userIdTextField.setText("");
        passwordTextField.setText("");
        phoneNumberTextField.setText("");
    }
}
