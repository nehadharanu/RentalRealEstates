/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface.HomeEssentials;

import Business.HomeEssentials.HomeEssentials;
import Business.HomeEssentials.HomeEssentialsDirectory;
import Business.EcoSystem;
import Business.UserAccountManagement.UserAccount;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author rajesh
 */
public class MarketStock extends javax.swing.JPanel {

    /**
     * Creates new form MarketStock
     */
    private UserAccount userAcc;
    private EcoSystem system;
    private JPanel container;

    public MarketStock(JPanel userProcessContainer, EcoSystem system, UserAccount userAcc) {
        initComponents();
        this.system = system;
        this.container = userProcessContainer;
        this.userAcc = userAcc;
        populateStock();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtTable = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtBeds = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtMonitor = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtHEater = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtChair = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtOrg = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtCookware = new javax.swing.JTextField();
        txtBike = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        btnAdd = new javax.swing.JButton();

        setBackground(new java.awt.Color(250, 249, 251));
        setPreferredSize(new java.awt.Dimension(1160, 750));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 204, 153));
        jPanel1.setPreferredSize(new java.awt.Dimension(1160, 750));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("SF Pro", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 51, 255));
        jLabel2.setText("Home Essentials Stock");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 20, -1, -1));

        jLabel3.setFont(new java.awt.Font("SF Pro Text", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(73, 84, 90));
        jLabel3.setText("Update the Home Essential stock here and manage them");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 70, -1, -1));

        jLabel4.setFont(new java.awt.Font("SF Pro Text", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(73, 84, 90));
        jLabel4.setText("Tables");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 110, 240, -1));

        txtTable.setBackground(new java.awt.Color(248, 248, 249));
        txtTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTableActionPerformed(evt);
            }
        });
        txtTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTableKeyPressed(evt);
            }
        });
        jPanel2.add(txtTable, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 140, 230, 30));

        jLabel5.setFont(new java.awt.Font("SF Pro Text", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(73, 84, 90));
        jLabel5.setText("Beds");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 190, 240, -1));

        txtBeds.setBackground(new java.awt.Color(248, 248, 249));
        txtBeds.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBedsKeyPressed(evt);
            }
        });
        jPanel2.add(txtBeds, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 220, 230, 30));

        jLabel6.setFont(new java.awt.Font("SF Pro Text", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(73, 84, 90));
        jLabel6.setText("Monitors");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 190, 230, -1));

        txtMonitor.setBackground(new java.awt.Color(248, 248, 249));
        txtMonitor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtMonitorKeyPressed(evt);
            }
        });
        jPanel2.add(txtMonitor, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 220, 210, 30));

        jLabel7.setFont(new java.awt.Font("SF Pro Text", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(73, 84, 90));
        jLabel7.setText("Heaters");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 360, 250, -1));

        txtHEater.setBackground(new java.awt.Color(248, 248, 249));
        txtHEater.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtHEaterKeyPressed(evt);
            }
        });
        jPanel2.add(txtHEater, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 400, 230, 30));

        jLabel9.setFont(new java.awt.Font("SF Pro Text", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(73, 84, 90));
        jLabel9.setText("Chairs");
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 110, 230, -1));

        txtChair.setBackground(new java.awt.Color(248, 248, 249));
        txtChair.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtChairKeyPressed(evt);
            }
        });
        jPanel2.add(txtChair, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 140, 210, 30));

        jLabel8.setFont(new java.awt.Font("SF Pro Text", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(73, 84, 90));
        jLabel8.setText("Organizers");
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 280, 240, -1));

        txtOrg.setBackground(new java.awt.Color(248, 248, 249));
        txtOrg.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtOrgKeyPressed(evt);
            }
        });
        jPanel2.add(txtOrg, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 310, 210, 30));

        jLabel10.setFont(new java.awt.Font("SF Pro Text", 0, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(73, 84, 90));
        jLabel10.setText("Cookware");
        jPanel2.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 270, 240, -1));

        txtCookware.setBackground(new java.awt.Color(248, 248, 249));
        txtCookware.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCookwareKeyPressed(evt);
            }
        });
        jPanel2.add(txtCookware, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 310, 230, 30));

        txtBike.setBackground(new java.awt.Color(248, 248, 249));
        txtBike.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBikeKeyPressed(evt);
            }
        });
        jPanel2.add(txtBike, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 400, 210, 30));

        jLabel11.setFont(new java.awt.Font("SF Pro Text", 0, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(73, 84, 90));
        jLabel11.setText("Bikes");
        jPanel2.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 360, 250, -1));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 70, 730, 500));

        btnAdd.setBackground(new java.awt.Color(51, 51, 255));
        btnAdd.setFont(new java.awt.Font("SF Pro Text", 1, 18)); // NOI18N
        btnAdd.setForeground(new java.awt.Color(255, 255, 255));
        btnAdd.setText("Update Stock");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        jPanel1.add(btnAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 600, 160, 30));

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1150, 740));
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        updateStock();
        
    }//GEN-LAST:event_btnAddActionPerformed

    private void txtTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTableActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_txtTableActionPerformed

    private void txtTableKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTableKeyPressed
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (Character.isLetter(c)) {
            txtTable.setEditable(false);
            JOptionPane.showMessageDialog(null, "enter number");
        } else {
            txtTable.setEditable(true);
        }
    }//GEN-LAST:event_txtTableKeyPressed

    private void txtChairKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtChairKeyPressed
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (Character.isLetter(c)) {
            txtChair.setEditable(false);
            JOptionPane.showMessageDialog(null, "enter number");
        } else {
            txtChair.setEditable(true);
        }
    }//GEN-LAST:event_txtChairKeyPressed

    private void txtBedsKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBedsKeyPressed
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (Character.isLetter(c)) {
            txtBeds.setEditable(false);
            JOptionPane.showMessageDialog(null, "enter number");
        } else {
            txtBeds.setEditable(true);
        }
    }//GEN-LAST:event_txtBedsKeyPressed

    private void txtMonitorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMonitorKeyPressed
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (Character.isLetter(c)) {
            txtMonitor.setEditable(false);
            JOptionPane.showMessageDialog(null, "enter number");
        } else {
            txtMonitor.setEditable(true);
        }
    }//GEN-LAST:event_txtMonitorKeyPressed

    private void txtCookwareKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCookwareKeyPressed
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (Character.isLetter(c)) {
            txtCookware.setEditable(false);
            JOptionPane.showMessageDialog(null, "enter number");
        } else {
            txtCookware.setEditable(true);
        }
    }//GEN-LAST:event_txtCookwareKeyPressed

    private void txtOrgKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtOrgKeyPressed
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (Character.isLetter(c)) {
            txtOrg.setEditable(false);
            JOptionPane.showMessageDialog(null, "enter number");
        } else {
            txtOrg.setEditable(true);
        }
    }//GEN-LAST:event_txtOrgKeyPressed

    private void txtHEaterKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHEaterKeyPressed
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (Character.isLetter(c)) {
            txtBeds.setEditable(false);
            JOptionPane.showMessageDialog(null, "enter number");
        } else {
            txtBeds.setEditable(true);
        }
    }//GEN-LAST:event_txtHEaterKeyPressed

    private void txtBikeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBikeKeyPressed
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (Character.isLetter(c)) {
            txtBike.setEditable(false);
            JOptionPane.showMessageDialog(null, "enter number");
        } else {
            txtBike.setEditable(true);
        }
    }//GEN-LAST:event_txtBikeKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField txtBeds;
    private javax.swing.JTextField txtBike;
    private javax.swing.JTextField txtChair;
    private javax.swing.JTextField txtCookware;
    private javax.swing.JTextField txtHEater;
    private javax.swing.JTextField txtMonitor;
    private javax.swing.JTextField txtOrg;
    private javax.swing.JTextField txtTable;
    // End of variables declaration//GEN-END:variables

    private void updateStock() {

        if (txtTable.getText().isEmpty() || txtChair.getText().isEmpty() || txtBeds.getText().isEmpty() || txtMonitor.getText().isEmpty() || txtCookware.getText().isEmpty() || txtOrg.getText().isEmpty() || txtHEater.getText().isEmpty() || txtBike.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "please enter all mandatory fields");
            return;
        }
        
        HomeEssentialsDirectory bwd = system.getHomeEssentialsDirectory();
        List<HomeEssentials> bw = bwd.getHomeEssentials();
        int s = bw.size();

        HomeEssentials b = (HomeEssentials) (userAcc);
        for (int i = 0; i < s; i++) {
            HomeEssentials o = bw.get(i);
            if (o.getUsername().matches(b.getUsername())) {

                try {
                    Map<String, Integer> stock = new HashMap<String, Integer>();
                    
                    stock.put("Tables", Integer.parseInt(txtTable.getText()));
                    
                    stock.put("Chairs", Integer.parseInt(txtChair.getText()));
                    stock.put("Beds", Integer.parseInt(txtBeds.getText()));
                    stock.put("Monitors", Integer.parseInt(txtMonitor.getText()));
                    stock.put("Cookware", Integer.parseInt(txtCookware.getText()));
                    stock.put("Organizers", Integer.parseInt(txtOrg.getText()));
                    stock.put("Heaters", Integer.parseInt(txtHEater.getText()));
                    stock.put("Bikes", Integer.parseInt(txtBike.getText()));
                    
                    o.setHomeEssentialsMap(stock);
                    
                    JOptionPane.showMessageDialog(null, "stock updated!!");
                } catch (NumberFormatException ex) {
                    JOptionPane.showMessageDialog(this, "Should contain number only");
                }
            }
        }

    }

    private void populateStock() {
        HomeEssentialsDirectory bwd = system.getHomeEssentialsDirectory();
        HomeEssentials marketPlace = (HomeEssentials) (userAcc);
        
        List<HomeEssentials> bw = bwd.getHomeEssentials();
        
        for(HomeEssentials he: bw) {
            if(he.getUserId().equals(marketPlace.getUserId())) {
                Map<String, Integer> homeEssentialsMap = he.getHomeEssentialsMap();
                
                for (Map.Entry<String,Integer> entry : homeEssentialsMap.entrySet()) {
                    
                    switch(entry.getKey()) {
                        case "Tables":
                            txtTable.setText(entry.getValue().toString());
                            break;
                        case "Chairs":
                            txtChair.setText(entry.getValue().toString());
                            break;
                        case "Beds":
                            txtBeds.setText(entry.getValue().toString());
                            break;
                        case "Monitors":
                            txtMonitor.setText(entry.getValue().toString());
                            break;
                        case "Cookware":
                            txtCookware.setText(entry.getValue().toString());
                            break;
                        case "Organizers":
                            txtOrg.setText(entry.getValue().toString());
                            break;
                        case "Heaters":
                            txtHEater.setText(entry.getValue().toString());
                            break;
                        case "Bikes":
                            txtBike.setText(entry.getValue().toString());
                            break;
                    }
                }
            }
        }
    }

}
