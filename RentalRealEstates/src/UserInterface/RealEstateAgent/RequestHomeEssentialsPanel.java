/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface.RealEstateAgent;

import Business.HomeEssentials.HomeEssentials;
import Business.HomeEssentials.HomeEssentialsDirectory;
import Business.RealEstateAgency.RealEstateAgent;
import Business.RealEstateAgency.RealEstateAgent;
import Business.EcoSystem;
import Business.UserAccountManagement.UserAccount;
import Business.UserAccountManagement.UserAccount;
import Business.WorkQueue.RequestHomeEssentials;
import Business.WorkQueue.RequestHomeEssentialsDirectory;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author preranagireesh
 */
public class RequestHomeEssentialsPanel extends javax.swing.JPanel {

    /**
     * Creates new form RequestBloodFrame
     */
    private UserAccount userAcc;
    private EcoSystem system;
    private JPanel container;

    public RequestHomeEssentialsPanel(JPanel userProcessContainer, EcoSystem ecosystem, UserAccount userAcc) {
        initComponents();
        this.system = ecosystem;
        this.container = userProcessContainer;
        this.userAcc = userAcc;
        displayTable();
        HomeEssentialsDirectory homeEssentialsDir = ecosystem.getHomeEssentialsDirectory();
        RealEstateAgent realEstateAgent = (RealEstateAgent) (userAcc);
        firstNameTxt.setText(realEstateAgent.getAgentName());

        List<HomeEssentials> HomeEssentialsLists = homeEssentialsDir.getHomeEssentials();
        int l = HomeEssentialsLists.size();
        for (int i = 0; i < l; i++) {
            HomeEssentials homeEssentials = HomeEssentialsLists.get(i);
            homeEssentialsList.addItem(homeEssentials.getStoreName());

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        request = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        units = new javax.swing.JPanel();
        requestButtonButton = new javax.swing.JButton();
        cancel = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        firstNameTxt = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        unit = new javax.swing.JTextField();
        homeEssentialsList = new javax.swing.JComboBox<>();
        productList = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(250, 249, 251));
        setPreferredSize(new java.awt.Dimension(1920, 1080));

        request.setBackground(new java.awt.Color(255, 204, 153));
        request.setPreferredSize(new java.awt.Dimension(1920, 750));
        request.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("SF Pro Display", 1, 24)); // NOI18N
        jLabel1.setText("Request Home Essentials");
        request.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(44, 31, 290, -1));

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Status", "Item Type", "Units"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(jTable3);

        jPanel8.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 700, 520));

        request.add(jPanel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, 700, 520));

        units.setBackground(new java.awt.Color(255, 255, 255));
        units.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        requestButtonButton.setBackground(new java.awt.Color(51, 51, 255));
        requestButtonButton.setFont(new java.awt.Font("SF Pro Text", 0, 14)); // NOI18N
        requestButtonButton.setForeground(new java.awt.Color(255, 255, 255));
        requestButtonButton.setText("Request Product");
        requestButtonButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestButtonButtonActionPerformed(evt);
            }
        });
        units.add(requestButtonButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 430, 150, 30));

        cancel.setBackground(new java.awt.Color(255, 55, 95));
        cancel.setFont(new java.awt.Font("SF Pro Text", 1, 14)); // NOI18N
        cancel.setForeground(new java.awt.Color(255, 255, 255));
        cancel.setText("Cancel Request");
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });
        units.add(cancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 430, 160, 30));

        jLabel2.setFont(new java.awt.Font("SF Pro Display", 1, 24)); // NOI18N
        jLabel2.setText("Enter Details");
        units.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 300, 50));

        jLabel7.setFont(new java.awt.Font("SF Pro Text", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(73, 84, 90));
        jLabel7.setText("Select Home Essentials");
        units.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, 220, -1));

        firstNameTxt.setEditable(false);
        firstNameTxt.setFont(new java.awt.Font("SF Pro Text", 0, 14)); // NOI18N
        units.add(firstNameTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 270, 330, 30));

        jLabel8.setFont(new java.awt.Font("SF Pro Text", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(73, 84, 90));
        jLabel8.setText("Agent Name");
        units.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 240, 220, -1));

        jLabel11.setFont(new java.awt.Font("SF Pro Text", 0, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(73, 84, 90));
        jLabel11.setText("Units");
        units.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 320, 220, -1));

        unit.setFont(new java.awt.Font("SF Pro Text", 0, 14)); // NOI18N
        unit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unitActionPerformed(evt);
            }
        });
        unit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                unitKeyPressed(evt);
            }
        });
        units.add(unit, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 350, 330, 30));

        homeEssentialsList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeEssentialsListActionPerformed(evt);
            }
        });
        units.add(homeEssentialsList, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, 330, 30));

        productList.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Chair", "Table", "Bed", "Heater", "Cookware", "Bike", "Monitor", "Organizer" }));
        units.add(productList, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, 330, 30));

        jLabel9.setFont(new java.awt.Font("SF Pro Text", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(73, 84, 90));
        jLabel9.setText("Home Essentials item");
        units.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 220, -1));

        request.add(units, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 90, 380, 520));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(request, javax.swing.GroupLayout.PREFERRED_SIZE, 1200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(720, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(request, javax.swing.GroupLayout.PREFERRED_SIZE, 809, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 271, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void requestButtonButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestButtonButtonActionPerformed
        // TODO add your handling code here:
        addProductRequest();


    }//GEN-LAST:event_requestButtonButtonActionPerformed

    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
        // TODO add your handling code here:

        deleteProductRequest();
    }//GEN-LAST:event_cancelActionPerformed

    private void unitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unitActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_unitActionPerformed

    private void unitKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_unitKeyPressed
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (Character.isLetter(c)) {
            unit.setEditable(false);
            JOptionPane.showMessageDialog(null, "enter number");
        } else {
            unit.setEditable(true);
        }
    }//GEN-LAST:event_unitKeyPressed

    private void homeEssentialsListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeEssentialsListActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_homeEssentialsListActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancel;
    private javax.swing.JTextField firstNameTxt;
    private javax.swing.JComboBox<String> homeEssentialsList;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable3;
    private javax.swing.JComboBox<String> productList;
    private javax.swing.JPanel request;
    private javax.swing.JButton requestButtonButton;
    private javax.swing.JTextField unit;
    private javax.swing.JPanel units;
    // End of variables declaration//GEN-END:variables

    private void displayTable() {
        // throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
        {
            RequestHomeEssentialsDirectory requestHomeEssentialsDirectory = system.getRequestHomeEssentialDirectory();
            List<RequestHomeEssentials> reqHomeEssentialsList = requestHomeEssentialsDirectory.getProductRequestList();
            int l = reqHomeEssentialsList.size();
            DefaultTableModel table = (DefaultTableModel) jTable3.getModel();
            table.setRowCount(0);
            for (int i = 0; i < l; i++) {
                RequestHomeEssentials reqHomeEssentialsPlace = reqHomeEssentialsList.get(i);
                if (userAcc.getUsername().matches(reqHomeEssentialsPlace.getRealEstateAgentId())) {
                    String s1 = String.valueOf(reqHomeEssentialsPlace.getId());
                    String s[] = {s1, reqHomeEssentialsPlace.getHomeEssentialName(), reqHomeEssentialsPlace.getStatus(), reqHomeEssentialsPlace.getProductType(), Integer.toString(reqHomeEssentialsPlace.getUnits())};
                    table.addRow(s);
                }
            }

        }

    }

    private void addProductRequest() {
        // throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody

        if (unit.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "please enter all mandatory fields");
            return;
        }

        RequestHomeEssentials reqHomeEssentials = new RequestHomeEssentials();
        int z = 1 + (int) (Math.random() * 100);
        reqHomeEssentials.setId(z);
        reqHomeEssentials.setFirstName(firstNameTxt.getText());
        reqHomeEssentials.setProductType(productList.getSelectedItem().toString()+"s");
        reqHomeEssentials.setHomeEssentialName(homeEssentialsList.getSelectedItem().toString());
        try {
            if(Integer.parseInt(unit.getText()) <= 0 ) {
                JOptionPane.showMessageDialog(null, "Please enter a number greater than 0");
                return;
            }
            reqHomeEssentials.setUnits(Integer.parseInt(unit.getText()));
        } catch(NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "Please enter a number for units");
            return;
        }
        reqHomeEssentials.setStatus("In Progress");
        RequestHomeEssentialsDirectory reqHomeEssentialsDir = system.getRequestHomeEssentialDirectory();
        RealEstateAgent realEstateAgent = (RealEstateAgent) (userAcc);
        reqHomeEssentials.setRealEstateAgentId(userAcc.getUsername());
        reqHomeEssentialsDir.addProductRequest(reqHomeEssentials);

        JOptionPane.showMessageDialog(null, "Product Requested Successfully!!");
//        jTable3.setModel(new DefaultTableModel(null, new String[]{"ID", "Center", "Status", "Blood Type", "Units requested"}));
        displayTable();

    }

    private void deleteProductRequest() {
        //throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
        DefaultTableModel table = (DefaultTableModel) jTable3.getModel();
        int selectedRow = jTable3.getSelectedRow();
        if (selectedRow >= 0) {
            int sRow = Integer.parseInt(table.getValueAt(selectedRow, 0).toString());
            //System.out.println("id"+s);
            RequestHomeEssentialsDirectory reqHomeEssentialsDir = system.getRequestHomeEssentialDirectory();
            List<RequestHomeEssentials> reqHomeEssentialsList = reqHomeEssentialsDir.getProductRequestList();
            int l = reqHomeEssentialsList.size();

            for (int i = 0; i < l; i++) {
                RequestHomeEssentials reqHomeEssentials = reqHomeEssentialsList.get(i);
                if (sRow == reqHomeEssentials.getId()) {
                    if (reqHomeEssentials.getStatus().matches("In Progress")) {
                        reqHomeEssentials.setStatus("Cancelled");
                    } else {
                        JOptionPane.showMessageDialog(null, "Wrong Move!!");
                    }
                }
            }
            jTable3.setModel(new DefaultTableModel(null, new String[]{"ID", "Center", "Status", "Product Type", "Units requested"}));
            displayTable();
        } else {
            JOptionPane.showMessageDialog(null, "Select a Row!!");
        }

    }
}
